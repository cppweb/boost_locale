Known Issues:
-------------

- Setting std::locale::global do not work from
  static constructors under MSVC, for example
  this would not work when init is global variable.

      struct initializaer {
	  initializaer() {
		  boost::locale::generator gen(...)
		  ...
		  std::locale::global(gen(...));
	  };
      } init;

  WORKAROUND:
  
  Do not install locales in static initializers.
  If you do not have access to main you may always check
  if locale was installed:

    if(std::has_facet<booster::locale::info>(std::locale()))
       // Do Nothing
    else 
       // Generate locale
       std::locale::global(your_created_locale)


- ICU Specific issue: In some cases ICU fails to recognize
  time zone correctly and map it into internal time-zone,
  So you may get mismatch between boost::locale local time
  and system local time in when daylight time-savings are
  active.

  Unfortunately this is pure ICU issue that can't be fixed
  by Boost.Locale directly.

  WORKAROUND:

  1. Use ICU version that works well on your system. 
     For my knowledge ICU-4.2 gives best results on most of them in time zone 
     recognition.
  
  2. Specify time-zone manually
    
     boost::locale::time_zone::global(boost::locale::time_zone("Correct-TimeZone-Name"));



  
